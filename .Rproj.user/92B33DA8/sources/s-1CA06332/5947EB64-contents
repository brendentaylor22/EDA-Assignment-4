---
title: "EDA Assignment 4 - COVID-19 Visualisation"
author: "Brenden Taylor"
date: "31/03/2020"
output: 
  bookdown::html_document2:
    number_sections: no
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, comment = NA, warning = FALSE)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggmap)
library(tmap)
library(plotly)
library(sf)
library(spData)
```

```{r get-data}
#Get latest COVID-19 data
#I don't run this in a separate file because I want the latest data every time the file is knit
ncov <- read.csv("https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv")
# convert Date from factor to date class
ncov <- ncov %>% mutate(Date = ymd(Date))

#Get geometry data for the world and all its countries

#Most comprehensive data of countries seems to come from ne_countries, but this doesn't separate the West Bank and Gaza, and Israel, but the ncov data does. So I use spData's world function to get geometry data for the West Bank and Gaza, and then add it in later

world_dat = world %>%
  select(c("name_long", "continent", "region_un", "subregion", "pop", "geom"))

palest = world_dat %>%
  filter(name_long == "Palestine")

colnames(palest) = c("sovereignt", "continent", "region_un", "subregion", "pop_est", "geometry")

world_dat = ne_countries(scale = "medium", returnclass = "sf")
world

```

```{r check-data, include = F}
#The COVID-19 data is assumed to be clean since the repo used claims to be the cleaned version of data from John's Hopkins. So no structural checks, NA checks etc. are done at this stage.
```

```{r conform-data}
#Add COVID-19 data to geometry data
#Some countries are named differently so we change those now
#Change country names in world data
world$sovereignt = world$sovereignt %>%
  recode("United States of America" = "US",
         "United Republic of Tanzania" = "Tanzania",
         "East Timor" = "Timor-Leste",
         "Swaziland" = "Eswatini",
         "The Bahamas" = "Bahamas",
         )

#Change country names in ncov data
ncov$Country = ncov$Country %>%
  recode("Holy See" = "Vatican",
         "Cabo Verde" = "Cape Verde",
         "Guinea-Bissau" = "Guinea Bissau",
         "Burma" = "Myanmar",
         "Congo (Kinshasa)" = "Democratic Republic of the Congo",
         "Congo (Brazzaville" = "Republic of Congo")


#Unfortunately I couldn't find 

```

```{r get-most-recent}
#To get only most recent data, either today's data or yesterday's if today's isn't up yet
if (max(ncov$Date) != today()) {
  date_newest = today()-1
}else{date = today()}
ncov_newest = ncov %>%
  filter(Date == date_newest)
```

```{r join-data}
#Have to use right join so R keeps the sf class
dat = right_join(world_dat, ncov_newest, by = c("name_long" = "Country"))
```

```{r}
world_points<- st_centroid(world)
world_points <- cbind(world, st_coordinates(st_centroid(world$geometry)))


plot = ggplot(data = world) +
  geom_sf() +
  geom_text(data= world_points, aes(x=X, y=Y, label=name),
    color = "darkblue", fontface = "bold", check_overlap = FALSE)

plot

ggplotly(plot)
```

# Section 1

## Section 1.1

## Section 1.2

### Section 1.2.1

# Section 2